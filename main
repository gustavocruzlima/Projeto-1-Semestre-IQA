#include <gtk/gtk.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "teste.h"

void teste (GtkButton *button, gpointer data) {

	int i, result=1;
	int n[9];
	char string[10];
	GtkGrid *grid = (GtkGrid*)data;
	GtkEntry *entry[9];
	for (i=0; i<9; i++) {
		entry[i] = (GtkEntry*)gtk_grid_get_child_at(grid,0, i);
		n[i] = atoi(gtk_entry_get_text(entry[i]));
		printf("%d", iqaCalc(n));
	}
	itoa(result, string, 10);
	GtkLabel *label = (GtkLabel*)gtk_grid_get_child_at(grid, 0, i+1);
	gtk_label_set_text(label, string);
	fflush(stdout);
	
}


int main(int argc, char *argv[]) {

	int i;
	char nome[9][40] = 
		{"Coliformes Fecais (NMP/100mL)", "pH (unidades de pH)", "DBO (mg/L)",
		 "Nitrogenio Total (mg/L)", "Fosforo Total (mg/L)", "Variacao de Temperatura (C)",
		  "Turbidez (UNT)", "OD (% saturacao)", "Solidos Totais (mg/L)"};
		
	GtkWidget *window;
	GtkWidget *grid;
	GtkWidget *entry[9];	  
	GtkWidget *name[9];
	GtkWidget *out;
	GtkWidget *button;
	
	gtk_init(&argc, &argv);
	
	window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
	gtk_window_set_position(GTK_WINDOW(window), GTK_WIN_POS_CENTER);
	gtk_window_set_title(GTK_WINDOW(window), "IQA CALCULATOR BEC");
	gtk_window_set_default_size(GTK_WINDOW(window), 400, 400);
	gtk_container_set_border_width(GTK_CONTAINER(window), 10);
	
	grid = gtk_grid_new();
	button = gtk_button_new_with_label("SEND");
	
	for (i=0; i<9; i++) {
		entry[i] = gtk_entry_new();
		name[i] = gtk_label_new(nome[i]);
		
		gtk_grid_attach(GTK_GRID(grid), entry[i], 0, i, 1, 1);
		gtk_grid_attach_next_to(GTK_GRID(grid), name[i], entry[i], GTK_POS_RIGHT, 1, 1);
		gtk_label_set_justify(GTK_LABEL(name[i]), GTK_JUSTIFY_RIGHT);
	}
	
	gtk_grid_attach(GTK_GRID(grid), button, 1, i, 1, 1);
	gtk_button_clicked(GTK_BUTTON(button));
	
	
	out = gtk_label_new("teste");
	gtk_grid_attach(GTK_GRID(grid), out, 0, i+1, 1, 1);  
	
	/*
	*/
	
	g_signal_connect(button, "clicked",
		G_CALLBACK(teste),(gpointer) grid );
	
	gtk_container_add(GTK_CONTAINER(window), grid);
	gtk_widget_show_all(window);
	  
	g_signal_connect(window, "destroy",
	    G_CALLBACK(gtk_main_quit), NULL);  
	
	gtk_main();
	
	return 0;
}
